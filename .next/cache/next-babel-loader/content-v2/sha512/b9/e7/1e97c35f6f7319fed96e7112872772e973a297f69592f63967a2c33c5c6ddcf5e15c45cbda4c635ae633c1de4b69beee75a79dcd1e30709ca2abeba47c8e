{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\ReactJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectID } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport { Head } from \"next/document\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://dattocngan:doitruong@cluster0.ptlub.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close().then();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://dattocngan:doitruong@cluster0.ptlub.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectID(meetupId)\n  });\n  client.close().then();\n  console.log(selectedMeetup);\n\n  const {\n    _id\n  } = selectedMeetup,\n        remainingSelectedMeetup = _objectWithoutProperties(selectedMeetup, [\"_id\"]);\n\n  return {\n    props: {\n      meetupData: _objectSpread({\n        id: selectedMeetup._id.toString()\n      }, remainingSelectedMeetup)\n    },\n    revalidate: 1\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["D:/Udemy/ReactJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectID","Fragment","Head","MeetupDetailsPage","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","then","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","remainingSelectedMeetup","id","revalidate"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,IAAR,QAAmB,eAAnB;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAAtC;AACc,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KADtC;AAEc,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAFxC;AAGc,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAH5C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdD;;AAgBA,OAAO,eAAeG,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,mGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,EAAoCC,OAApC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP,GAAeC,IAAf;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEP,OAAO,CAACQ,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACP,GAAP,CAAWU,QAAX;AAAZ;AAAV,KAAL,CAAlB;AAFJ,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMhB,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,mGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMgB,cAAc,GAAG,MAAMjB,iBAAiB,CAACkB,OAAlB,CAA0B;AAACd,IAAAA,GAAG,EAAElB,QAAQ,CAAC2B,QAAD;AAAd,GAA1B,CAA7B;AAEAhB,EAAAA,MAAM,CAACS,KAAP,GAAeC,IAAf;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;;AAEA,QAAM;AAACb,IAAAA;AAAD,MAAoCa,cAA1C;AAAA,QAAeI,uBAAf,4BAA0CJ,cAA1C;;AAEA,SAAO;AACH3B,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU;AACN+B,QAAAA,EAAE,EAAEL,cAAc,CAACb,GAAf,CAAmBU,QAAnB;AADE,SAEHO,uBAFG;AADP,KADJ;AAOHE,IAAAA,UAAU,EAAE;AAPT,GAAP;AASH;AAED,eAAelC,iBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient, ObjectID} from \"mongodb\";\r\nimport {Fragment} from \"react\";\r\nimport {Head} from \"next/document\";\r\n\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>{props.meetupData.title}</title>\r\n                <meta name='description' content={props.meetupData.description}/>\r\n            </Head>\r\n            <MeetupDetail image={props.meetupData.image}\r\n                          title={props.meetupData.title}\r\n                          address={props.meetupData.address}\r\n                          description={props.meetupData.description}\r\n            />\r\n        </Fragment>\r\n        );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://dattocngan:doitruong@cluster0.ptlub.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({},{_id: 1}).toArray();\r\n\r\n    client.close().then();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() }}))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    //fetch data for a single meetup\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://dattocngan:doitruong@cluster0.ptlub.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectID(meetupId)});\r\n\r\n    client.close().then();\r\n\r\n    console.log(selectedMeetup);\r\n\r\n    const {_id, ...remainingSelectedMeetup} = selectedMeetup;\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                ...remainingSelectedMeetup\r\n            }\r\n        },\r\n        revalidate: 1\r\n    };\r\n}\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}