{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Udemy\\\\ReactJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { useRouter } from \"next/router\";\n\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  _s();\n\n  useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: \"A First Meetup\",\n    address: \"Some address 5, 12345 Some City\",\n    description: \"This is a first meetup!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MeetupDetailsPage, \"CeygcqajjFExIxFEzW4x/gfWEGQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["D:/Udemy/ReactJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","useRouter","MeetupDetailsPage","props","meetupData","image"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA;;AACjCF,EAAAA,SAAS;AACT,sBACI,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,KAAK,CAACC,UAAN,CAAiBC,KAAtC;AACc,IAAA,KAAK,EAAC,gBADpB;AAEc,IAAA,OAAO,EAAC,iCAFtB;AAGc,IAAA,WAAW,EAAC;AAH1B;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CARD;;GAAMH,iB;UACFD,S;;;KADEC,iB;;AAkDN,eAAeA,iBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {useRouter} from \"next/router\";\r\nimport {MongoClient} from \"mongodb\";\r\n\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n    useRouter()\r\n    return (\r\n        <MeetupDetail image={props.meetupData.image}\r\n                      title='A First Meetup'\r\n                      address='Some address 5, 12345 Some City'\r\n                      description='This is a first meetup!'\r\n        />);\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://dattocngan:doitruong@cluster0.ptlub.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({},{_id: 1}).toArray();\r\n\r\n    client.close().then();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() }}))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    //fetch data for a single meetup\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://dattocngan:doitruong@cluster0.ptlub.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = meetupsCollection.findOne({_id: meetupId});\r\n\r\n    client.close().then();\r\n\r\n    console.log(meetupId);\r\n\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup\r\n        },\r\n        revalidate: 1\r\n    };\r\n}\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}